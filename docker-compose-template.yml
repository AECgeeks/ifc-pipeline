version: '3'

services:

{% if not db_host %}

  db:
    image: postgres:12.1-alpine
    expose:
      - "5432"
    labels:
      kompose.volume.size: 1Gi
    volumes:
      - ./docker-volumes/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata
      
{% endif %}

{% if with_minio %}

  minio:
    image: minio/minio
    volumes:
      - ./docker-volumes/minio:/data
    entrypoint:
      - minio
      - server
      - /data
    labels:
      kompose.volume.size: 1Gi
    volumes:
      - ./docker-volumes/minio:/data
    expose:
      - "9000"

{% endif %}

  redis:
    image: redis:5.0.7-alpine
    expose:
      - "6379"
    volumes:
      - ./docker-volumes/redis:/data

  frontend:
    build:
      context: '.'
      dockerfile: application/Dockerfile
    image: aecgeeks/ifc-pipeline:latest
    entrypoint:
      - /bin/sh
      - -c
      - python3 database.py; gunicorn --bind 0.0.0.0:5000 -w 8 --access-logfile - --error-logfile - wsgi
    environment:
  {% if not with_minio %}
      - MODEL_DIR=/data
      - OUTPUT_DIR=/output
  {% else %}
      - MINIO_HOST=minio:9000
  {% endif %}
      - REDIS_HOST=redis
      - POSTGRES_HOST={{ db_host or 'db' }}
      - POSTGRES_USER={{ db_user or 'postgres' }}
      - POSTGRES_PASS={{ db_pass or 'postgres' }}
    expose:
      - "5000"
    depends_on:
      - redis
  {% if not db_host %}
      - db
  {% endif %}
    labels:
      kompose.volume.size: 1Gi
  {% if not with_minio %}
    volumes:
      - ./models:/data
      - ./output:/output:ro
  {% endif %}
      
  nginx:
    image: nginx:1.17-alpine
    depends_on:
      - frontend
    ports:
      - "80:80"
    {% if with_https %}
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./docker-volumes/certbot/conf:/etc/letsencrypt
      - ./docker-volumes/certbot/www:/var/www/certbot
      - ./docker-volumes/nginx/log:/log
    entrypoint:
      - /bin/sh
      - -c
      - nginx -g 'daemon off;' & while true; do nginx -t && nginx -s reload; sleep 1h; done
    {% else %}
    volumes:
      - ./nginx_http_only:/etc/nginx/conf.d
    {% endif %}
    labels:
      kompose.service.type: loadbalancer
    
  voxel:
    build: voxel_server
    image: aecgeeks/voxel-server:latest
    expose:
      - "5000"    
  
  {% if with_https %}
  certbot:
    ports: []
    image: certbot/certbot
    volumes:
      - ./docker-volumes/certbot/conf:/etc/letsencrypt
      - ./docker-volumes/certbot/www:/var/www/certbot
    entrypoint:
      - /bin/sh
      - -c
      - trap exit INT TERM; while true; do certbot renew --webroot -w /var/www/certbot; sleep 12h; done
  {% endif %}

  worker:
    build:
      context: '.'
      dockerfile: application/Dockerfile
    image: aecgeeks/ifc-pipeline:latest
    entrypoint:
      - supervisord
      - -n
    environment:
  {% if not with_minio %}
      - MODEL_DIR=/data
      - OUTPUT_DIR=/output
  {% else %}
      - MINIO_HOST=minio:9000
  {% endif %}
      - REDIS_HOST=redis
      - NUM_WORKERS=2
      - POSTGRES_HOST={{ db_host or 'db' }}
      - POSTGRES_USER={{ db_user or 'postgres' }}
      - POSTGRES_PASS={{ db_pass or 'postgres' }}
    depends_on:
      - redis
  {% if not db_host %}
      - db
  {% endif %}
    labels:
      kompose.volume.size: 1Gi
  {% if not with_minio %}
    volumes:
      - ./models:/data:ro
      - ./output:/output
  {% endif %}

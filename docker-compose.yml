version: '3'

services:
  redis:
    image: redis:5.0.7-alpine
    expose:
      - "6379"
    volumes:
      - ./docker-volumes/redis:/data

  frontend:
    build:
      context: '.'
      dockerfile: application/Dockerfile
    entrypoint: sh -c 'python3 database.py; gunicorn --bind 0.0.0.0:5000 -w 8 --access-logfile - --error-logfile - wsgi'
    environment:
      - MODEL_DIR=/data
      - REDIS_HOST=redis
      - NO_DATABASE=true
    expose:
      - "5000"
    depends_on:
      - redis
      - db
    volumes:
      - ./models:/data
      
  nginx:
    image: nginx:1.17-alpine
    depends_on:
      - frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./docker-volumes/certbot/conf:/etc/letsencrypt
      - ./docker-volumes/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c \"nginx -g 'daemon off;' & while true; do nginx -t && nginx -s reload; sleep 1h; done\""
    
  
  certbot:
    ports: []
    image: certbot/certbot
    volumes:
      - ./docker-volumes/certbot/conf:/etc/letsencrypt
      - ./docker-volumes/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit INT TERM; while true; do certbot renew --webroot -w /var/www/certbot; sleep 12h; done'"

  worker:
    build:
      context: '.'
      dockerfile: application/Dockerfile
    entrypoint: supervisord -n
    environment:
      - MODEL_DIR=/data
      - REDIS_HOST=redis
      - NUM_WORKERS=2
      - NO_DATABASE=true
    depends_on:
      - redis
      - db
    volumes:
      - ./models:/data
